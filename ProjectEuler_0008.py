from sys import argv

thousandDigitNumber = "7316717653133062491922511967\
442657474235534919493496983520312774506\
326239578318016984801869478851843858615\
607891129494954595017379583319528532088\
055111254069874715852386305071569329096\
329522744304355766896648950445244523161\
731856403098711121722383113622298934233\
803081353362766142828064444866452387493\
035890729629049156044077239071381051585\
930796086670172427121883998797908792274\
921901699720888093776657273330010533678\
812202354218097512545405947522435258490\
771167055601360483958644670632441572215\
539753697817977846174064955149290862569\
321978468622482839722413756570560574902\
614079729686524145351004748216637048440\
319989000889524345065854122758866688116\
427171479924442928230863465674813919123\
162824586178664583591245665294765456828\
489128831426076900422421902267105562632\
111110937054421750694165896040807198403\
850962455444362981230987879927244284909\
188845801561660979191338754992005240636\
899125607176060588611646710940507754100\
225698315520005593572972571636269561882\
670428252483600823257530420752963450"

def getProd(subStr):
        p = 1
        for d in subStr:
            p *= int(d)
        return p

# returns the greatest product of n adjacent digits in the above
# 1000 digit number
def getAnswer(n):
    num = thousandDigitNumber
    mxP = 0
    for i in range(len(num)-n+1):
        mxP = max(mxP, getProd(num[i:i+n]))
    return mxP

if __name__=="__main__":
    print(getAnswer(int(argv[1])))
